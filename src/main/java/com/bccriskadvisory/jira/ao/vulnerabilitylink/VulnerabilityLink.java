package com.bccriskadvisory.jira.ao.vulnerabilitylink;

import java.time.ZonedDateTime;
import java.util.Optional;

import com.bccriskadvisory.jira.ao.PluginObject;
import com.bccriskadvisory.link.utility.Utilities;

public class VulnerabilityLink implements PluginObject<VulnLinkEntity> {
	
	private int ID;
	private long issueId;
	private String issueKey;
	private String projectKey;
	private int vulnerabilityId;
	private Optional<ZonedDateTime> lastUpdated = Optional.empty();
	
	public VulnerabilityLink() { }
	
	public VulnerabilityLink(final VulnLinkEntity entity) {
		ID = entity.getID();
		issueId = entity.getIssueId();
		issueKey = entity.getIssueKey();
		projectKey = entity.getProjectKey();
		vulnerabilityId = entity.getVulnerabilityId();
		lastUpdated = Utilities.fromDate(entity.getLastUpdated());
	}

	@Override
	public void copyTo(final VulnLinkEntity entity) {
		entity.setIssueId(issueId);
		entity.setIssueKey(issueKey);
		entity.setProjectKey(projectKey);
		entity.setVulnerabilityId(vulnerabilityId);
		
		if (lastUpdated.isPresent()) entity.setLastUpdated(Utilities.toDate(lastUpdated));
	}
	
	@Override
	public int getID() {
		return ID;
	}

	public long getIssueId() {
		return issueId;
	}

	public String getIssueKey() {
		return issueKey;
	}
	
	public String getProjectKey() {
		return projectKey;
	}

	public int getVulnerabilityId() {
		return vulnerabilityId;
	}

	public void setIssueId(long issueId) {
		this.issueId = issueId;
	}

	public void setIssueKey(String issueKey) {
		this.issueKey = issueKey;
	}
	
	public void setProjectKey(String projectKey) {
		this.projectKey = projectKey;
	}

	public void setVulnerabilityId(int vulnerabilityId) {
		this.vulnerabilityId = vulnerabilityId;
	}

	public Optional<ZonedDateTime> getLastUpdated() {
		return lastUpdated;
	}

	public void setLastUpdated(ZonedDateTime lastUpdated) {
		this.lastUpdated = Optional.ofNullable(lastUpdated);
	}
}